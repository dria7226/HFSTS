 - community focused (Reddit / Facebook inspired system)
 - self programmable
 - projects created using self contained modules (IDE)
 - interprets code files
 - The product and the IDE make up a single program (HFSTS) during development. On shipping, the IDE severes itself from the bundle, leaving only the CORE and tagged files
 - interpreter transparency - have interpreter be a representation of it's implementation (same for IDE)
-----------------------------------------------

 - Hephaestus is divided into 2 areas: included and not included in the product.

   CORE is included in the product by default, IDE and PRODUCT files can be included by the user.

   CORE is not a code file but the binary implementation for the interpreter, and cannot be modified by the user.

   A different CORE implementation for every platform.
-----------------------------------------------
VIRTUAL MACHINE DEFINITION:

 1.MEMORY MODEL
----------------
The interpreter simulates a machine that stores an array of arrays of numbers.

Fig.1

 +--------------------- an array of 4 arrays
 |
 v
+--+--+--+--+--+
|  |  |  |  |  |    <-- an array of 5 numbers
+--+--+--+--+--+
|  |  |  |  |       <-- an array of 4 numbers
+--+--+--+--+--+--+
|  |  |  |  |  |  | <-- an array of 6 numbers
+--+--+--+--+--+--+
|  |  |  |  |  |    <-- an array of 5 numbers
+--+--+--+--+--+
